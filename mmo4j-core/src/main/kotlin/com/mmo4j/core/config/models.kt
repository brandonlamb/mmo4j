package com.mmo4j.core.config

import java.time.Duration

data class AccountConfig(
  val maxAccountLength: Int
)

data class WorldConfig(
  val activeWeather: Boolean,
  val addonChannel: Boolean,
  val allFlightPaths: Boolean,
  val allowCharacterCreation: Boolean,
  val alwaysMaxSkillForLevel: Boolean,
  val artifactItemDropRate: Float,
  val auctionCutRate: Float,
  val auctionDepositMin: Int,
  val auctionDepositRate: Float,
  val auctionTimeRate: Float,
  val changeWeatherInterval: Duration,
  val charactersPerAccount: Int,
  val charactersPerRealm: Int,
  val cleanCharacterDb: Boolean,
  val corpseDecayLootedRate: Float,
  val creatureAggroRate: Float,
  val creatureFamilyAssistanceDelay: Int,
  val creatureFamilyAssistanceRadius: Float,
  val creatureFamilyFleeAssistanceRadius: Float,
  val creatureFamilyFleeDelay: Int,
  val currencyDropRate: Float,
  val currencyAmountDropRate: Float,
  val durabilityLossChanceAbsorb: Float,
  val durabilityLossChanceBlock: Float,
  val durabilityLossChanceDamage: Float,
  val durabilityLossChanceParry: Float,
  val eliteCreatureDamageRate: Float,
  val eliteCreatureHpRate: Float,
  val eliteCreatureSpellDamageRate: Float,
  val energyRate: Float,
  val epicItemDropRate: Float,
  val expansion: Int,
  val exploreXpRate: Float,
  val eventAnnounce: Boolean,
  val fallDamage: Float,
  val focusRate: Float,
  val gameType: Int,
  val gridCleanupDelay: Duration,
  val gridUnload: Boolean,
  val guarderSight: Float,
  val healthRate: Float,
  val heroicCharactersPerRealm: Int,
  val honorRate: Float,
  val instanceIgnoreLevel: Boolean,
  val instanceIgnoreRaid: Boolean,
  val instanceResetInterval: Duration,
  val instanceResetTimeRate: Float,
  val instanceStrictCombatLockdown: Boolean,
  val instanceUnloadDelay: Duration,
  val killXpRate: Float,
  val legendaryItemDropRate: Float,
  val listenRangeSay: Float,
  val listenRangeTextEmote: Float,
  val listenRangeYell: Float,
  val longFlightPathsPersistence: Boolean,
  val mailDeliveryDelay: Duration,
  val manaRate: Float,
  val mapUpdateInterval: Duration,
  val maxArenaPoints: Int,
  val maxGroupXpDistance: Float,
  val maxHonorPoints: Int,
  val maxPlayerLevel: Int,
  val maxPrimaryTradeSkill: Int,
  val maxWhoListReturns: Int,
  val minCharacterName: Int,
  val minLevelForHeroicCharacterCreating: Int,
  val minPetitionSigns: Int,
  val minPetName: Int,
  val minPlayerName: Int,
  val miningAmountRate: Float,
  val miningNextRate: Float,
  val moneyDropRate: Float,
  val monsterSight: Float,
  val normalCreatureDamageRate: Float,
  val normalCreatureHpRate: Float,
  val normalCreatureSpellDamageRate: Float,
  val normalItemDropRate: Float,
  val petXpKillRate: Float,
  val playerLimit: Int,
  val playerSaveInterval: Duration,
  val playerSaveStatsMinLevel: Int,
  val playerSaveStatsSaveOnlyOnLogout: Boolean,
  val poorItemDropRate: Float,
  val rageIncomeRate: Float,
  val rageLossRate: Float,
  val rareCreatureDamageRate: Float,
  val rareCreatureHpRate: Float,
  val rareCreatureSpellDamageRate: Float,
  val rareEliteCreatureDamageRate: Float,
  val rareEliteCreatureHpRate: Float,
  val rareEliteCreatureSpellDamageRate: Float,
  val rareItemDropRate: Float,
  val realmZone: Int,
  val referencedItemDropRate: Float,
  val reputationGainRate: Float,
  val reputationLowLevelKillRate: Float,
  val reputationLowLevelQuestRate: Float,
  val restInGameRate: Float,
  val restOfflineInTavernOrCityRate: Float,
  val restInWildernessRate: Float,
  val runicPowerIncomeRate: Float,
  val runicPowerLossRate: Float,
  val saveRespawnTimeImmediately: Boolean,
  val skillChanceGreen: Int,
  val skillChanceGrey: Int,
  val skillChanceMilling: Boolean,
  val skillChanceMiningSteps: Int,
  val skillChanceOrange: Int,
  val skillChanceProspecting: Boolean,
  val skillChanceSkinningSteps: Int,
  val skillChanceYellow: Int,
  val skillFailLootFishing: Boolean,
  val skillFailGainFishing: Boolean,
  val skillGainCrafting: Int,
  val skillGainDefense: Int,
  val skillGainGathering: Int,
  val skillGainWeapon: Int,
  val skillDiscoveryRate: Float,
  val skipCinematics: Boolean,
  val startArenaPoints: Int,
  val startHonorPoints: Int,
  val startPlayerLevel: Int,
  val strictCharacterNames: Boolean,
  val strictPetNames: Boolean,
  val strictPlayerNames: Boolean,
  val talentRate: Float,
  val uncommonItemDropRate: Float,
  val questItemDropRate: Float,
  val questXpRate: Float,
  val worldBossCreatureDamageRate: Float,
  val worldBossCreatureHpRate: Float,
  val worldBossCreatureSpellDamageRate: Float,
  val worldBossLevelDiff: Int,
  val worldServerPort: Int
)

data class SocialConfig(
  val friendLimit: Int,
  val ignoreLimit: Int
)
